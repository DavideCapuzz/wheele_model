<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" >

    <xacro:include filename="macros_inertial.xacro"/>
    <xacro:include filename="macros_material.xacro"/>

    <xacro:property name="wheelbase_length" value="0.313"/>
    <xacro:property name="wb_f_length" value="0.133"/>
    <xacro:property name="wb_r_length" value="0.112"/>

    <xacro:property name="chassis_length" value="${wheelbase_length + wb_r_length + wb_f_length}"/>
    <xacro:property name="chassis_width" value="0.313"/>
    <xacro:property name="chassis_height" value="${0.115+0.078}"/>

    <xacro:property name="track" value="0.666"/>

    <xacro:property name="chassis_mass" value="1.0"/>

    <xacro:property name="wheel_radius" value="0.07"/>
    <xacro:property name="wheel_thickness" value="0.085"/>
    <xacro:property name="wheel_mass" value="0.05"/>

    <xacro:property name="wheel_mass" value="0.05"/>

    <xacro:property name="wheel_offset_x" value="0.226"/>
    <xacro:property name="wheel_offset_y" value="0.1485"/>
    <xacro:property name="wheel_offset_z" value="0.01"/>

    <xacro:property name="caster_wheel_radius" value="0.01"/>
    <xacro:property name="caster_wheel_mass" value="0.01"/>
    <xacro:property name="caster_wheel_offset_x" value="0.075"/>
    <xacro:property name="caster_wheel_offset_z" value="${wheel_offset_z - wheel_radius + caster_wheel_radius}"/>
    <xacro:property name="chassis_mesh_file" value="file:$(cwd)/src/wheele_model/description/mesh/body_robot_2.dae"/>
    <xacro:property name="wheel_mesh_file" value="file:$(cwd)/src/wheele_model/description/mesh/Wheel.dae"/>

    <xacro:property name="lidar_x" value="${wheelbase_length/2 + 0.021 + 0.038/2}"/>
    <xacro:property name="lidar_y" value="${-chassis_width/2 + 0.03 + 0.038/2}"/>
    <xacro:property name="lidar_z" value="${chassis_height+0.02}"/>

    <xacro:property name="camera_width" value="0.1"/>
    <xacro:property name="camera_height" value="0.065"/>
    <xacro:property name="camera_length" value="0.03"/>
    <xacro:property name="camera_mass" value="0.05"/>

    <xacro:property name="camera_x" value="${wheelbase_length/2 + 0.08 + camera_length/2}"/>
    <xacro:property name="camera_y" value="${-chassis_width/2 + 0.16}"/>
    <xacro:property name="camera_z" value="${0.078 + 0.06 + camera_height/2}"/>

    <xacro:property name="lidarAS_width" value="0.076"/>
    <xacro:property name="lidarAS_height" value="0.220"/>
    <xacro:property name="lidarAS_length" value="0.032"/>
    <xacro:property name="lidarAS_mass" value="0.05"/>

    <xacro:property name="lidarAS_x" value="${-wheelbase_length/2 + lidarAS_length/2}"/>
    <xacro:property name="lidarAS_y" value="${chassis_width/2 - 0.04}"/>
    <xacro:property name="lidarAS_z" value="${lidarAS_height/2+chassis_height}"/>
    <!-- MACRO FOR THE WHEELS -->

    <xacro:macro name="wheel" params="prefix reflect_x reflect_y">

        <joint name="base_to_${prefix}_steering" type="continuous">
            <parent link="base_link"/>
            <child link="${prefix}_steering"/>
            <origin xyz="${reflect_x * wheelbase_length/2} ${reflect_y * (track - wheel_thickness)/2} 0" rpy="0 0 0"/>
            <axis xyz="0 0 1"/>
        </joint>

        <!-- fake link to simulate the steering-->
        <link name="${prefix}_steering">        
            <inertial>
                <mass value="0.0005" />
                <inertia ixx="0.0000018" ixy="0.0" ixz="0.0"
                        iyy="0.0000018" iyz="0.0"
                        izz="0.0000018" />
            </inertial>
        </link>

        <joint name="steering_to_${prefix}_wheel" type="continuous">
            <parent link="${prefix}_steering"/>
            <child link="${prefix}_wheel"/>
            <origin xyz="0 0 ${wheel_radius}" rpy="0 0 0"/>
            <axis xyz="0 1 0"/>
        </joint>

        <link name="${prefix}_wheel">
            <visual>
                <geometry>
                    <mesh filename="${wheel_mesh_file}" scale="1 1 1" />
                </geometry>
                <origin xyz="0 0 0" rpy="0 0 ${pi/2 + reflect_y * pi/2}"/>
                <material name="white"/>
            </visual>
            <collision>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
                </geometry>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
            </collision>
            <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_thickness}" radius="${wheel_radius}">
                <origin xyz="0 0 0" rpy="0 0 0"/>
            </xacro:inertial_cylinder>
        </link>
        
        <gazebo reference="${prefix}_wheel">
            <material>Gazebo/Blue</material>
        </gazebo>
    </xacro:macro>


    <!-- BASE LINK -->

    <link name="base_link">

    </link>

    <!-- BASE_FOOTPRINT LINK -->

    <joint name="base_footprint_joint" type="fixed">
        <parent link="base_link"/>
        <child link="base_footprint"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>

    <link name="base_footprint">
    </link>


    <!-- CHASSIS LINK -->

    <joint name="chassis_joint" type="fixed">
        <parent link="base_link"/>
        <child link="chassis"/>        
        <origin xyz="0 0 0"/>
    </joint>

    <link name="chassis">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 ${pi/2}"/>
            <geometry>
                <mesh filename="${chassis_mesh_file}" scale="1 1 1" />
            </geometry>
            <material name="orange"/>
        </visual>
        <collision>
            <origin xyz="0 0 ${chassis_height/2}"/>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
        </collision>
        <xacro:inertial_box mass="0.5" x="${chassis_length}" y="${chassis_width}" z="${chassis_height}">
            <origin xyz="0 0 ${chassis_height/2}" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>

    <gazebo reference="chassis">
        <material>Gazebo/Orange</material>
    </gazebo>

    <xacro:wheel prefix="front_right" reflect_x="1" reflect_y="1" />
    <xacro:wheel prefix="front_left" reflect_x="1" reflect_y="-1" />
    <xacro:wheel prefix="rear_right" reflect_x="-1" reflect_y="1" />
    <xacro:wheel prefix="rear_left" reflect_x="-1" reflect_y="-1" />
    <!-- LEFT WHEEL LINK 

    <joint name="left_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="left_wheel"/>
        <origin xyz="0 ${wheel_offset_y} 0" rpy="-${pi/2} 0 0" />
        <axis xyz="0 0 1"/>
    </joint>

    <link name="left_wheel">
        <visual>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${wheel_radius}"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_thickness}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="left_wheel">
        <material>Gazebo/Blue</material>
    </gazebo>

-->


    <!-- RIGHT WHEEL LINK 

    <joint name="right_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="right_wheel"/>
        <origin xyz="0 ${-wheel_offset_y} 0" rpy="${pi/2} 0 0" />
        <axis xyz="0 0 -1"/>
    </joint>

    <link name="right_wheel">
        <visual>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${wheel_radius}"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_thickness}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="right_wheel">
        <material>Gazebo/Blue</material>
    </gazebo>
-->

    <!-- CASTER WHEEL LINK -->

   

</robot>